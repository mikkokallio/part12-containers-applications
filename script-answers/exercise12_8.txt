> docker container ls -a
CONTAINER ID   IMAGE          COMMAND                  CREATED             STATUS             PORTS                     NAMES
0ae692c03363   mongo:latest   "docker-entrypoint.sâ€¦"   About an hour ago   Up About an hour   0.0.0.0:3456->27017/tcp   todo-backend_mongodb_1
> docker container exec -it 0ae bash
root@0ae692c03363:/# mongosh -u root -p example
Current Mongosh Log ID: 634308397c68b7afa3966e21
Connecting to:          mongodb://<credentials>@127.0.0.1:27017/?directConnection=true&serverSelectionTimeoutMS=2000&appName=mongosh+1.6.0
Using MongoDB:          6.0.2
Using Mongosh:          1.6.0

For mongosh info see: https://docs.mongodb.com/mongodb-shell/

------
   The server generated these startup warnings when booting
   2022-10-09T16:33:52.310+00:00: /sys/kernel/mm/transparent_hugepage/enabled is 'always'. We suggest setting it to 'never'
   2022-10-09T16:33:52.310+00:00: vm.max_map_count is too low
------

------
   Enable MongoDB's free cloud-based monitoring service, which will then receive and display        
   metrics about your deployment (disk utilization, CPU, operation statistics, etc).

   The monitoring data will be available on a MongoDB website with a unique URL accessible to you   
   and anyone you share the URL with. MongoDB may use this information to make product
   improvements and to suggest MongoDB products and deployment options to you.

   To enable free monitoring, run the following command: db.enableFreeMonitoring()
   To permanently disable this reminder, run the following command: db.disableFreeMonitoring()      
------

test> show dbs
admin         100.00 KiB
config         72.00 KiB
local          72.00 KiB
the_database   56.00 KiB
test> use the_database
switched to db the_database
the_database> show collections
todos
the_database> db.todos.find()
[
  { _id: ObjectId("6342f7e27892d2b8d5321b4c"), text: null, done: true },
  {
    _id: ObjectId("6342f7e27892d2b8d5321b4d"),
    text: 'Learn about containers',
    done: false
  }
]
the_database> db.todos.insertOne( { text: "Increase the number of tools in my toolbelt", done: false } )
{
  acknowledged: true,
  insertedId: ObjectId("634309f78959ecf4086be7a0")
}
the_database> db.todos.find()
[
  { _id: ObjectId("6342f7e27892d2b8d5321b4c"), text: null, done: true },
  {
    _id: ObjectId("6342f7e27892d2b8d5321b4d"),
    text: 'Learn about containers',
    done: false
  },
  {
    _id: ObjectId("634309f78959ecf4086be7a0"),
    text: 'Increase the number of tools in my toolbelt',
    done: false
  }
]
the_database>